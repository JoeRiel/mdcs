-*- org -*-

* DONE SCR1: mds-eval-and-prettyprint writes procedure to live-buf, which screws up operation
  CLOSED: [2011-06-04 Sat 09:07]
  1. Problem occurs because [[file:maple/src/Format.mm::prettyprint%20proc%20top%20truefalse%20true][prettyprint]] calls ':-showstat'.  Changed
     to showstat (which is mdc:-Format:-showstat).
  2. That fails because `mds-showstat-statement' is not being set correctly.
     It cannot be, since we are calling from Maple.  Two obvious solutions:
     1. Handle the error (simple);
     2. Clear [[file:lisp/mds-showstat.el::clear%20variable%20so%20next%20time%20we%20do%20not%20search][mds-showstat-statement]] after use.
  3. Try 2 first.  It can probably be made to work, however,
     mds-showstat-statement is currently not buffer-local.  Making
     it buffer-local (I don't believe it is intended to communicate
     between live and dead buffers.  That seems to fix the problem.

* DONE SRC2: [[file:lisp/mds-showstat.el::defun%20mds%20eval%20and%20prettyprint%20expr][mds-eval-and-prettyprint]] writes <type> to client, not server
  CLOSED: [2011-06-04 Sat 09:07]
  1. The actual culprit is [[file:maple/src/Format.mm::prettyprint%20proc%20top%20truefalse%20true][mdc:-Format:-prettyprint]], which calls printf.
  2. Fixed by renaming mdc:-Debugger:-_print to [[file:maple/src/Debugger.mm::Printf%20proc][mdc:-Debugger:-Printf]],
     making it an export of mdc:-Debugger, and then replacing all printf
     statements with it.

* TODO SCR3: Try (in showstat buffer) ". int:-ModuleApply". 
  The procedure doesn't display, and the error is "module does not
  export %1".  Contrast this with the error in tty, "the name
  ModuleApply in 'int' is declared local..."

* TODO SCR3: Display formatted error messages
  The 'x' key (mds-showexception) has no effect on the output buffer.
  1. The cause is simple, [[file:lisp/mds-showstat.el::mds%20showstat%20eval%20expr%20printf%20s%20n%20StringTools%20FormatMessage%20debugopts%20lastexception%202][mds-showexception]] is calling 'printf'.
    Change to mdc:-Debugger.
  2. That didn't quite work; now it prints 'interrupted'
  3. Actually, it appears to return a different error.  Now, when the error is `(none)`,
     an error "first argument must be a string" appears as a Maple error.
     Where is that coming from?
  4. The problem arose because debugopts(lastexception) returns a name, `(none)`,
     rather than a string.  Handled by writing [[file:maple/src/Debugger.mm::ShowException%20proc][ShowException]] export to 
     mdc:-Debugger and checking for the special case.
  5. A similar change was made to [[file:lisp/mds-showstat.el::defun%20mds%20showerror%20fmt][mds-showerror]].

     

